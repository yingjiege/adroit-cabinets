{"version":3,"sources":["components/TableHead.jsx","components/TableBody.jsx","components/PrintHead.jsx","components/PrintTable.jsx","components/PrintFooter.jsx","components/PrintAcc.jsx","components/TableFooter.jsx","components/AccTableHead.jsx","components/AccTableBody.jsx","components/AccTableFooter.jsx","components/CreateArea.jsx","components/Topbar.jsx","components/RightSideBar.jsx","components/App.jsx","index.js"],"names":["TableHead","_ref","item","handleEditAllInOne","handleUpdateTwo","_useState","useState","_useState2","_slicedToArray","cabinetDoor","setCabinetDoor","useEffect","Axios","get","then","res","searchedCabinet","data","catch","error","console","React","createElement","className","style","fontSize","colSpan","rowSpan","src","alt","width","height","type","list","name","value","company","onChange","event","PO","cabinetBox","hingeType","ADoorColor","id","map","key","color","slide","BDoorColor","drawer","CDoorColor","cabinetLeg","TableBody","newItem","itemNum","handleDeleteClick","handleCopyClick","handleEdited","cabinet","setCabinet","_useState3","_useState4","addOn","setAddOn","cabInfo","cabinetSize","find","cab","ID","colorSelected","_useState5","_useState6","additionalShown","setAdditionalShown","_useState7","_useState8","widthValue","setWidthValue","_useState9","_useState10","qtyInteger","setQtyInteger","_useState11","_useState12","widthPositive","setWidthPositive","_useState13","_useState14","hingeReq","setHingeReq","isPositiveInteger","input","test","W","isNaN","qty","DOOR_COUNT","hinge","Fragment","onClick","placeholder","doorColor","readOnly","every","disabled","textAlign","margin","min","display","justifyContent","max","depth","finLOrR","price","hidden","doorH","pcTopDoor","pcDoor","botDF","notchOut","customizeAddOn","AddOnDoor","AddOnHardware","memo","PrintHead","select","info","isEmpty","ifFinLOrR","setIfFinLOrR","ifDoorH","setIfDoorH","ifPcTopDoor","setIfPcTopDoor","ifPcDoor","setIfPcDoor","ifBotDF","setIfBotDF","ifNotchOut","setIfNotchOut","i","billing","align","PrintTable","ItemNum","TableFooter","props","items","accessories","acc","testTotal","totalQty","row","Number","accPrice","accQty","Math","round","PrintAcc","accColor","accWidth","accHeinght","accDepth","addNumberOfRow","setAddNumberOfRow","n","onAdd","needRow","target","handleAddRowNumber","AccTableHead","AccTableBody","Accitem","accNum","handleDeleteAcc","handleCopyAcc","handleEditedAcc","Acc","setAcc","ACC","accHeight","AccTableFooter","itemsWithNewData","Array","isArray","concat","_objectSpread","printPDF","borderStyle","CSVLink","filename","CreateArea","customer","setCustomer","cabinetFinish","setCabnietFinish","discount","setSelect","_useState15","doorType","BO","DO","_useState16","setItems","_useState17","accCategory","accType","_useState18","setAccessories","getCabinetById","getColor","getAddOnDoor","custom","getAddOnHardware","getAcc","componentPDF","useRef","generatePDF","useReactToPrint","content","current","documentTile","calculation","obj","finLorR","finalPrice","parseFloat","newDoorColor","category","doorCount","hingeNum","slideNum","HINGE_COUNT","SLIDE_COUNT","NaN","toFixed","newFinish","Price","updateItem","itemId","fieldName","getAttribute","fieldValue","toUpperCase","newData","newSelect","Newindex","findIndex","Sindex","H","D","HARDWARE","newCabinetInfo","editedItem","newItems","_toConsumableArray","copyRow","index","copyItem","tempItem","nanoid","splice","deleteRow","uploadCal","newDiscount","undefined","formatPercentage","numericValue","percentageValue","updateAcc","newAccInfo","newAccColor","copyAcc","deleteAcc","calAcc","updatedItems","updatedItem","prevState","_defineProperty","Company","MULTIPIER","replace","item1","rowItem","push","newItemsAdd","ref","PrintFooter","accept","e","file","files","endsWith","reader","FileReader","readAsBinaryString","onload","result","workbook","XLSX","sheetName","SheetNames","sheet","Sheets","parsedData","sheet_to_json","length","newArray","newAcc","priceArr","alert","Topbar","aria-label","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","href","fontsize","RightSideBar","setInfo","handleInfoChange","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","rows","App","description","date","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d5339022.chunk.js","sourcesContent":["import React, { useState,  useEffect} from \"react\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nfunction TableHead({item,handleEditAllInOne, handleUpdateTwo}) {\r\n  \r\n  const [cabinetDoor, setCabinetDoor] = useState([]);\r\n  useEffect(() => {\r\n    Axios.get(`https://us-east-1.aws.data.mongodb-api.com/app/application-0-hxfdv/endpoint/cabinet_door`)\r\n      .then((res) => {\r\n        const searchedCabinet = res.data;\r\n        setCabinetDoor(searchedCabinet);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n  return (\r\n    <thead className=\"table-success\">\r\n      <tr style={{ fontSize: '10px' }}>\r\n            <th colSpan={3} rowSpan={3}>\r\n              <img\r\n                src=\"https://adroitmanufacturing.allmoxy.com/data/header/Adroit_logo_3d-01-01.png\"\r\n                alt=\"adroit-manufacturing-logo\"\r\n                width={120}\r\n                height={50}\r\n              />\r\n            </th>\r\n            <th colSpan={2}>\r\n              Adroit\r\n            </th>\r\n            <th className=\"listhead\">*CUSTERMER:</th>\r\n            <th>\r\n            <input\r\n                type=\"text\"\r\n                list=\"dataCompany\"\r\n                className=\"form-control\"\r\n                name=\"company\"\r\n                value={item.company}\r\n                onChange={(event) => handleUpdateTwo(event, item)}\r\n              />\r\n            </th>\r\n            <th className=\"listhead\">PO#:</th>\r\n            <th>\r\n                <input\r\n                type=\"text\"\r\n                list=\"dataPO\"\r\n                className=\"form-control\"\r\n                name=\"PO\"\r\n                value={item.PO}\r\n                onChange={(event) => handleEditAllInOne(event,  item)}\r\n                />\r\n                </th>\r\n            <th colSpan={2}>BILLING TO:</th>\r\n            <th colSpan={3}>MEMO:</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={2}>Adroit LOGISTICS</th>\r\n            <th className=\"needBorder\">*CABINET BOX:</th>\r\n            <th>\r\n            <select\r\n                list=\"dataBox\"\r\n                className=\"form-control\"\r\n                name=\"cabinetBox\"\r\n                value={item.cabinetBox}\r\n                onChange={(event) => handleEditAllInOne(event,  item)}\r\n                >\r\n                <option value=\"\">-- Select --</option>\r\n                <option value=\"COMODO_BOX\">COMODO_BOX</option>\r\n                <option value=\"WHITE_BOX\">WHITE_BOX</option>\r\n                <option value=\"MAPLE_BOX\">MAPLE_BOX</option>\r\n                <option value=\"BIRCH_BOX\">BIRCH_BOX</option>\r\n                <option value=\"DOMESTIC_MAPLE_BOX\">DOMESTIC_MAPLE_BOX</option>\r\n                <option value=\"GREY_BOX\">GREY_BOX</option>\r\n                </select>\r\n            </th>\r\n            <th className=\"needBorder\">HINGE:</th>\r\n            <th>\r\n              <select\r\n                list=\"dataHinge\"\r\n                className=\"form-control\"\r\n                name=\"hingeType\"\r\n                value={item.hingeType}\r\n                onChange={(event) => handleEditAllInOne(event, item)}\r\n              >\r\n                <option value=\"\">-- Select --</option>\r\n                <option value=\"STANDARD\">STANDARD</option>\r\n                <option value=\"BLUM\">BLUM</option>\r\n              </select>\r\n            </th>\r\n            <th colSpan={3} rowSpan={5} className=\"needBorder\"></th>\r\n            <th colSpan={3} rowSpan={5} className=\"needBorder\"></th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={2}>859 39th St</th>\r\n            <th className=\"needBorder\">*A DOOR COLOR:</th>\r\n            <th>\r\n                <input\r\n                    type=\"text\"\r\n                    list=\"dataAdoor\"\r\n                    className=\"form-control\"\r\n                    name=\"ADoorColor\"\r\n                    value={item.ADoorColor}\r\n                    onChange={(event) => handleEditAllInOne(event,  item)}\r\n                    />\r\n                <datalist id=\"dataAdoor\">\r\n                  {cabinetDoor.map((item, key) => (\r\n                    <option key={key} value={item.color} />\r\n                  ))}\r\n                </datalist>\r\n            </th>\r\n            <th className=\"needBorder\">SLIDE:</th>\r\n            <th>\r\n            <select\r\n                type=\"text\"\r\n                list=\"dataSlide\"\r\n                className=\"form-control\"\r\n                name=\"slide\"\r\n                value={item.slide}\r\n                onChange={(event) => handleEditAllInOne(event,  item)}\r\n                >\r\n                  <option value=\"\">-- Select --</option>\r\n                  <option value=\"STANDARD UM SLIDE\">STANDARD UM SLIDE</option>\r\n                  <option value=\"STANDARD METAL SLIDE\">STANDARD METAL SLIDE</option>\r\n                  <option value=\"BLUM UM SLIDE\">BLUM UM SLIDE</option>\r\n                  <option value=\"SALICE UM SLIDE\">SALICE UM SLIDE</option>\r\n            </select>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n          <th colSpan={3}>www.adroitmanufactory.com</th>\r\n            <th colSpan={2}>BROOKLYN</th>\r\n            <th className=\"needBorder\">B DOOR COLOR:</th>\r\n            <th><input\r\n                  type=\"text\"\r\n                  list=\"dataBdoor\"\r\n                  className=\"form-control\"\r\n                  name=\"BDoorColor\"\r\n                  value={item.BDoorColor}\r\n                  onChange={(event) => handleEditAllInOne(event,  item)}\r\n                  />\r\n            <datalist id=\"dataBdoor\">\r\n              {cabinetDoor.map((item, key) => (\r\n                <option key={key} value={item.color} />\r\n              ))}\r\n            </datalist></th>\r\n            <th className=\"needBorder\">DRAWER BOX:</th>\r\n            <th>\r\n            <select\r\n                type=\"text\"\r\n                list=\"dataDrawer\"\r\n                className=\"form-control\"\r\n                name=\"drawer\"\r\n                value={item.drawer}\r\n                onChange={(event) => handleEditAllInOne(event,  item)}\r\n                >\r\n                  <option value=\"\">-- Select --</option>\r\n                  <option value=\"METAL DRAWER WHITE\">METAL DRAWER WHITE</option>\r\n                  <option value=\"METAL DRAWER SLIM GREY\">METAL DRAWER SLIM GREY</option>\r\n                  <option value=\"PLYWOOD DRAWER\">PLYWOOD DRAWER</option>\r\n                  <option value=\"DOVETAIL DRAWER\">DOVETAIL DRAWER</option>  \r\n             </select>     \r\n\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n          <th colSpan={3}>customer.service@adroit.com</th>\r\n            <th colSpan={2}>Tel.(718)431-0089</th>\r\n            <th className=\"needBorder\">C DOOR COLOR:</th>\r\n            <th>\r\n                <input\r\n                type=\"text\"\r\n                list=\"dataCdoor\"\r\n                className=\"form-control\"\r\n                name=\"CDoorColor\"\r\n                value={item.CDoorColor}\r\n                onChange={(event) => handleEditAllInOne(event,  item)}\r\n                />\r\n            <datalist id=\"dataCdoor\">\r\n              {cabinetDoor.map((item, key) => (\r\n                <option key={key} value={item.color} />\r\n              ))}\r\n            </datalist></th>\r\n\r\n            <th className=\"needBorder\">CABINET LEG:</th>\r\n            <th>\r\n              <select\r\n              type=\"text\"\r\n              list =\"dataCabinetLeg\"\r\n              name =\"cabinetLeg\"\r\n              className=\"form-control\"\r\n              value={item.cabinetLeg}\r\n              onChange={(event) => handleEditAllInOne(event,  item)}\r\n              >\r\n                  <option value=\"None\">None</option>\r\n                  <option value=\"PLASTIC\">PLASTIC</option>\r\n                  <option value=\"WOOD\">WOOD</option> \r\n              </select>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n          <th colSpan={3} rowSpan={2}>com.: 517 LUIS VAZQUEZ</th>\r\n            <th colSpan={2}>Fax.(718)431-0060</th>\r\n            <th className=\"needBorder\">SP ORDER LEAD TIME:</th>\r\n            <th></th>\r\n            <th className=\"needBorder\">Assemble Time (Min): </th>\r\n            <th></th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={2}>-- Operation insured by MAPFRE</th>\r\n            <th className=\"needBorder\">9407</th>\r\n            <th colSpan={1}>Tel:+11234567890</th>\r\n            <th colSpan={4}></th>\r\n          </tr>\r\n      <tr>\r\n        <th className=\"text-center\">Cabinet</th>\r\n        <th className=\"text-center\">Copy</th>\r\n        <th className=\"text-center\">Item#</th>\r\n        <th className=\"text-center\">Cabinet Size</th>\r\n        <th className=\"text-center\">Door Color</th>\r\n        <th className=\"text-center\">Qty</th>\r\n        <th className=\"text-center\">Width(inch)</th>\r\n        <th className=\"text-center\">Height(inch)</th>\r\n        <th className=\"text-center\">Depth</th>\r\n        <th className=\"text-center\">Hinge L/R</th>\r\n        <th className=\"text-center\">Finish L/R</th>\r\n        <th  colSpan=\"2\" className=\"text-center\">Price</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\nexport default TableHead;\r\n","import React, {useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nfunction TableBody({\r\n  newItem, \r\n  item,\r\n  itemNum,\r\n  handleDeleteClick,\r\n  handleCopyClick,\r\n  handleEdited,\r\n}) {\r\n\r\n  const [cabinet, setCabinet] = useState([]);\r\n  const [addOn, setAddOn] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(`https://us-east-1.aws.data.mongodb-api.com/app/application-0-hxfdv/endpoint/cabinet`)\r\n      .then((res) => {\r\n        const searchedCabinet = res.data;\r\n        setCabinet(searchedCabinet);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    Axios.get(`https://us-east-1.aws.data.mongodb-api.com/app/application-0-hxfdv/endpoint/get_cabinet_addon`)\r\n      .then((res) => {\r\n        const searchedCabinet = res.data;\r\n        setAddOn(searchedCabinet);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n  const getCabinetById = (id) => {\r\n    return cabinet.find(cab => cab.ID === id);\r\n  }\r\n\r\n  const cabInfo = getCabinetById(item.cabinetSize);\r\n\r\n  const colorSelected = [\r\n    newItem.ADoorColor,\r\n    newItem.BDoorColor,\r\n    newItem.CDoorColor\r\n  ]\r\n  \r\n  const [additionalShown, setAdditionalShown] = useState(false);\r\n  const handleToggleAdditional = () => {\r\n    setAdditionalShown(!additionalShown);\r\n  };\r\n\r\n  const [widthValue, setWidthValue] = useState(true);\r\n  const [qtyInteger, setQtyInteger] = useState(true);\r\n  const [widthPositive, setWidthPositive] = useState(true);\r\n  const [hingeReq, setHingeReq] = useState(true);\r\n  function isPositiveInteger(input) {\r\n    return /^[0-9]\\d*$/.test(input);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (cabInfo && item.width > cabInfo.W) {\r\n      setWidthValue(false);\r\n    } else {\r\n      setWidthValue(true);\r\n    }\r\n\r\n    if (!isPositiveInteger(item.width)) {\r\n      if (isNaN(item.width)) {\r\n        setWidthPositive(true);\r\n      } else {\r\n        setWidthPositive(false);\r\n      }\r\n    } else {\r\n      setWidthPositive(true);\r\n    }\r\n\r\n    if (!isPositiveInteger(item.qty)) {\r\n      if (isNaN(item.qty)) {\r\n        setQtyInteger(true);\r\n      } else {\r\n        setQtyInteger(false);\r\n      }\r\n    } else {\r\n      setQtyInteger(true);\r\n    }\r\n\r\n    if(cabInfo){\r\n      if(cabInfo.DOOR_COUNT === 1 && item.hinge === \"\")\r\n        setHingeReq(false);\r\n      else \r\n        setHingeReq(true);\r\n    }\r\n    \r\n  }, [item.width, item.qty, item.hinge, cabInfo]);\r\n\r\n  return (\r\n    <><tr>\r\n      <td>\r\n        <i className=\"bi bi-x-circle-fill btn\"\r\n          onClick={() => handleDeleteClick(item.id)}\r\n        ></i>\r\n      </td>\r\n      <td>\r\n        <i className=\"bi bi-files btn\"\r\n        onClick={() => handleCopyClick(item.id)}\r\n        ></i>\r\n      </td>\r\n      <td className=\"text-center\"> {itemNum + 1}</td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          list=\"cabinetSize\"\r\n          className=\"form-control\"\r\n          placeholder=\"Select Cabinet Size\"\r\n          name=\"cabinetSize\"\r\n          style={{ width: \"12em\" }}\r\n          value={item.cabinetSize}\r\n          onChange={(event) => handleEdited(event, item.id, item, newItem)} \r\n          />\r\n          <datalist id=\"cabinetSize\">\r\n            {cabinet.map((item, key) => (\r\n              <option key={key} value={item.ID} />\r\n            ))}\r\n          </datalist>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          list=\"data3\"\r\n          className=\"form-control\"\r\n          placeholder=\"Select Door Color\"\r\n          name=\"doorColor\"\r\n          style={{ width: \"12em\" }}\r\n          value={item.doorColor} // use the doorColor value from newItem\r\n          onChange={(event) => handleEdited(event, item.id, item, newItem)}\r\n          readOnly={colorSelected.every(color => color === \"\")}\r\n          disabled={colorSelected.every(color => color === \"\")}\r\n        />\r\n        <datalist id=\"data3\">\r\n          {colorSelected.map((item, key) => (\r\n            <option key={key} value={item} />\r\n          ))}\r\n        </datalist>\r\n      </td>\r\n      <td style={{ textAlign: \"center\" }}>\r\n        <input\r\n          type=\"number\"\r\n          name=\"qty\"\r\n          className={qtyInteger === false ? \"form-control is-invalid\" : \"form-control\"}\r\n          style={{ width: \"5em\", margin: \"0 auto\" }}\r\n          value={item.qty}\r\n          min=\"1\"\r\n          onChange={(event) => handleEdited(event, item.id, item, newItem)}\r\n        />\r\n        {!qtyInteger && (\r\n          <div className=\"invalid-feedback\">Please enter more than 0</div>\r\n        )}\r\n      </td>\r\n      <td className=\"text-center\" style={{ textAlign: \"center\", display: \"flex\", justifyContent: \"center\" }}>\r\n          <input\r\n            type=\"number\"\r\n            name=\"width\"\r\n            className={widthValue === false || widthPositive === false ? \"form-control is-invalid\" : \"form-control\"} \r\n            style={{ width: \"5em\" }}\r\n            value={item.width}\r\n            max={cabInfo && cabInfo.W}\r\n            min=\"0\"\r\n            onChange={(event) => handleEdited(event, item.id, item, newItem)}\r\n          />\r\n          {widthValue === false && (\r\n            <div className=\"invalid-feedback\">Please enter value not oversized</div>\r\n          )}\r\n          {widthPositive === false && (\r\n            <div className=\"invalid-feedback\">Please enter width more than 0 and integer only</div>\r\n          )}\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"height\"\r\n            className=\"form-control\"\r\n            style={{ width: \"5em\", margin: \"0 auto\" }}\r\n            value={item.height}\r\n            readOnly\r\n            disabled\r\n          />\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"depth\"\r\n            className=\"form-control\"\r\n            style={{ width: \"5em\", margin: \"0 auto\" }}\r\n            value={item.depth}\r\n            readOnly\r\n            disabled\r\n          />\r\n        </td>\r\n      <td className=\"text-center\">\r\n        <select\r\n          type=\"text\"\r\n          name=\"hinge\"\r\n          className={hingeReq === false  ? \"form-control is-invalid\" : \"form-control\"}\r\n          style={{ width: \"8em\" }}\r\n          value = {item.hinge}\r\n          onChange={(event) => handleEdited(event, item.id, item, newItem)}\r\n        >\r\n          <option value=\"\">-- Select --</option>\r\n          <option value=\"L\">Left</option>\r\n          <option value=\"R\">Right</option>\r\n        </select>\r\n        {!hingeReq && (\r\n          <div className=\"invalid-feedback\">Hinge is required</div>\r\n        )}\r\n      </td>\r\n      <td className=\"text-center\">\r\n        <select\r\n            type=\"text\"\r\n            name=\"finLOrR\"\r\n            className=\"form-control\"\r\n            style={{ width: \"6em\" }}\r\n            value={item.finLOrR}\r\n            onChange={(event) => handleEdited(event, item.id, item, newItem)}\r\n          >\r\n          <option value=\"\">-- None --</option>\r\n          <option value=\"L\">Left</option>\r\n          <option value=\"R\">Right</option>\r\n          <option value=\"LR\">LR</option>\r\n        </select>\r\n      </td>\r\n      <td>\r\n        <input\r\n          name=\"price\"\r\n          className=\"form-control bg-light rounded-pill\"\r\n          type=\"number\"\r\n          value={item.price}\r\n          style={{ width: \"8em\" }}\r\n          readOnly\r\n          disabled />\r\n      </td>\r\n      </tr>\r\n      <tr>\r\n      <td>\r\n        <button onClick={handleToggleAdditional}\r\n        className=\"form-control\">\r\n          {additionalShown ? \"Hide \" : \"Additional\"}\r\n        </button>\r\n      </td>\r\n      <th colSpan=\"1\" className=\"text-center\" ></th>\r\n          <th className=\"text-center\" hidden={!additionalShown}>DOOR H</th>\r\n          <th className=\"text-center\" hidden={!additionalShown}>PC TOP DOOR</th>\r\n          <th className=\"text-center\" hidden={!additionalShown}>BC DOOR</th>\r\n          <th className=\"text-center\" hidden={!additionalShown}>BOT DF</th>\r\n          <th className=\"text-center\" hidden={!additionalShown}>NOTCH OUT</th>\r\n          <th colSpan=\"2\" className=\"text-center\" hidden={!additionalShown}>CUSTOMIZE ADD ON</th>\r\n          <th colSpan=\"4\" className=\"text-center\" hidden={!additionalShown}>MEMO</th>\r\n      </tr>\r\n      <tr hidden={!additionalShown}>\r\n        <td></td>\r\n        <td></td>\r\n        \r\n      <td className=\"text-center\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"doorH\"\r\n          style={{ width: \"6em\", margin: \"0 auto\" }}\r\n          className=\"form-control\"\r\n          value = {item.doorH}\r\n          onChange={(event) => handleEdited(event, item.id, item, newItem)}\r\n          />\r\n      </td>\r\n      <td className=\"text-center\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"pcTopDoor\"\r\n          className=\"form-control\"\r\n          style={{ width: \"6em\", margin: \"0 auto\" }}\r\n          value = {item.pcTopDoor}\r\n          onChange={(event) => handleEdited(event, item.id, item, newItem)}\r\n           />\r\n      </td>\r\n      <td className=\"text-center\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"pcDoor\"\r\n          className=\"form-control\"\r\n          style={{ width: \"6em\", margin: \"0 auto\" }}\r\n          value = {item.pcDoor}\r\n          onChange={(event) => handleEdited(event, item.id, item, newItem)}\r\n           />\r\n      </td>\r\n      <td className=\"text-center\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"botDF\"\r\n          className=\"form-control\"\r\n          style={{ width: \"6em\", margin: \"0 auto\" }}\r\n          value = {item.botDF}\r\n          onChange={(event) => handleEdited(event, item.id, item, newItem)}\r\n           />\r\n      </td>\r\n      <td className=\"text-center\">\r\n        <select\r\n          type=\"text\"\r\n          name=\"notchOut\"\r\n          className=\"form-control\"\r\n          style={{ width: \"8em\", margin: \"0 auto\" }}\r\n          value = {item.notchOut}\r\n          onChange={(event) => handleEdited(event, item.id, item, newItem)}\r\n           >\r\n            <option value=\"\">-- Select --</option>\r\n            <option value=\"GOLA\">GOLA</option>\r\n            <option value=\"MITER DOOR\">MITER DOOR</option>\r\n          </select>\r\n\r\n      </td>\r\n      <td colSpan=\"2\" className=\"text-center\">\r\n        <input\r\n          type=\"text\"\r\n          list=\"customizeAddOn\"\r\n          className=\"form-control\"\r\n          name=\"customizeAddOn\"\r\n          value={item.customizeAddOn}\r\n          onChange={(event) => handleEdited(event, item.id, item, newItem)}\r\n          style={{ width: \"25em\" }}\r\n        />\r\n        <datalist id=\"customizeAddOn\">\r\n          {addOn.map((item, key) => (\r\n            <option key={key} value={item.AddOnDoor || item.AddOnHardware} />\r\n          ))}\r\n        </datalist>\r\n      </td>\r\n      <td colSpan=\"4\" className=\"text-center\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"memo\"\r\n          className=\"form-control\"\r\n          style={{ width: \"24em\" }}\r\n          value = {item.memo}\r\n          onChange={(event) => handleEdited(event, item.id, item, newItem)}\r\n            />\r\n      </td>\r\n    </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TableBody;","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction PrintHead({ item, select, info }) {\r\n  function isEmpty(value) {\r\n    if (value === \"\") {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    } // Modify this condition based on your definition of an empty value\r\n  }\r\n\r\n  const [ifFinLOrR, setIfFinLOrR] = useState(true);\r\n  const [ifDoorH, setIfDoorH] = useState(true);\r\n  const [ifPcTopDoor, setIfPcTopDoor] = useState(true);\r\n  const [ifPcDoor, setIfPcDoor] = useState(true);\r\n  const [ifBotDF, setIfBotDF] = useState(true);\r\n  const [ifNotchOut, setIfNotchOut] = useState(true);\r\n\r\n  useEffect(() => {\r\n    for (let i in item) {\r\n      if (!isEmpty(item[i].finLOrR)) {\r\n        setIfFinLOrR(false);\r\n      }\r\n      if (!isEmpty(item[i].doorH)) {\r\n        setIfDoorH(false);\r\n      }\r\n      if (!isEmpty(item[i].pcTopDoor)) { \r\n        setIfPcTopDoor(false);\r\n      }\r\n      if (!isEmpty(item[i].pcDoor)) {\r\n        setIfPcDoor(false);\r\n      }\r\n      if (!isEmpty(item[i].botDF)) {\r\n        setIfBotDF(false);\r\n      }\r\n      if (!isEmpty(item[i].notchOut)) {\r\n        setIfNotchOut(false);\r\n      }\r\n    }\r\n  }, [item]);\r\n  return (\r\n    <thead className=\"print-table-head\">\r\n      <tr>\r\n            <th colSpan={3} rowSpan={3}>\r\n            <img\r\n                src=\"https://adroitmanufacturing.allmoxy.com/data/header/Adroit_logo_3d-01-01.png\"\r\n                alt=\"adroit-manufacturing-logo\"\r\n                width={120}\r\n                height={50}\r\n              />\r\n            </th>\r\n            <th colSpan={3}>\r\n              Adroit\r\n            </th>\r\n            <th className=\"listhead needBorder\">CUSTERMER:</th>\r\n            <th className=\"listhead needBorder\" colSpan={2}>{select.company}</th>\r\n            <th className=\"listhead needBorder\"colSpan={2}>PO#:</th>\r\n            <th className=\"listhead needBorder\" colSpan={5}>{select.PO}</th>\r\n            <th className=\"listhead needBorder\"colSpan={3}>BILLING TO:</th>\r\n            <th className=\"listhead needBorder\"colSpan={3}>MEMO:</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={3}>Adroit LOGISTICS</th>\r\n            <th className=\"needBorder\">CABINET BOX:</th>\r\n            <th className=\"needBorder\" colSpan={2}>{select.cabinetBox}</th>\r\n            <th className=\"needBorder\" colSpan={2}>HINGE:</th>\r\n            <th className=\"needBorder\" colSpan={5}>{select.hingeType}</th>\r\n            <th colSpan={3} rowSpan={5} className=\"needBorder\">{info.billing}</th>\r\n            <th colSpan={3} rowSpan={5} className=\"needBorder\">{info.memo}</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={3}>859 39th St</th>\r\n            <th className=\"needBorder\">A DOOR COLOR:</th>\r\n            <th className=\"needBorder\" colSpan={2}>{select.ADoorColor}</th>\r\n            <th className=\"needBorder\" colSpan={2}>SLIDE:</th>\r\n            <th className=\"needBorder\" colSpan={5}>{select.slide}</th>\r\n          </tr>\r\n          <tr>\r\n          <th colSpan={3}>www.adroitmanufactory.com</th>\r\n            <th colSpan={3}>BROOKLYN</th>\r\n            <th className=\"needBorder\">B DOOR COLOR:</th>\r\n            <th className=\"needBorder\" colSpan={2}>{select.BDoorColor}</th>\r\n            <th className=\"needBorder\" colSpan={2}>DRAWER BOX:</th>\r\n            <th className=\"needBorder\" colSpan={5}>{select.drawer}</th>\r\n          </tr>\r\n          <tr>\r\n          <th colSpan={3}>customer.service@adroit.com</th>\r\n            <th colSpan={3}>Tel.(718)431-0089</th>\r\n            <th className=\"needBorder\">C DOOR COLOR:</th>\r\n            <th className=\"needBorder\" colSpan={2}>{select.CDoorColor}</th>\r\n            <th className=\"needBorder\" colSpan={2}>CABINET LEG:</th>\r\n            <th className=\"needBorder\" colSpan={5}>{select.cabinetLeg}</th>\r\n          </tr>\r\n          <tr>\r\n          <th colSpan={3} rowSpan={2}>com.: 517 LUIS VAZQUEZ</th>\r\n            <th colSpan={3}>Fax.(718)431-0060</th>\r\n            <th className=\"needBorder\">SP ORDER LEAD TIME:</th>\r\n            <th colSpan={2}> </th>\r\n            <th className=\"needBorder\" colSpan={2}>Assemble Time (Min): </th>\r\n            <th className=\"needBorder\" colSpan={5}></th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={3}>-- Operation insured by MAPFRE</th>\r\n            <th className=\"needBorder\">Bulks</th>\r\n            <th className=\"needBorder\">9407</th>\r\n            <th colSpan={1} className=\"needBorder\">Tel:+11234567890</th>\r\n          </tr>\r\n      <tr>\r\n        <th className=\"text-center\">Item#</th>\r\n        <th className=\"text-center\" >Cabinet Size</th>\r\n        <th className=\"text-center\" colSpan=\"4\">Door Color</th>\r\n        <th className=\"text-center\">Qty</th>\r\n        <th className=\"text-center\">Width(inch)</th>\r\n        <th className=\"text-center\">Height(inch)</th>\r\n        <th className=\"text-center\">Depth</th>\r\n        <th className=\"text-center\">Hinge L/R</th>\r\n        <th className=\"text-center\" hidden = {ifFinLOrR}>Finish L/R</th>\r\n        <th align=\"center\" hidden = {!ifFinLOrR}></th>\r\n        <th className=\"text-center\" hidden = {ifDoorH}>DOOR H</th>\r\n        <th align=\"center\" hidden = {!ifDoorH}></th>\r\n        <th className=\"text-center\" hidden = {ifPcTopDoor}>PC TOP DOOR</th>\r\n        <th align=\"center\" hidden = {!ifPcTopDoor}></th>\r\n        <th className=\"text-center\" hidden = {ifPcDoor}>BC DOOR</th>\r\n        <th align=\"center\" hidden = {!ifPcDoor}></th>\r\n        <th className=\"text-center\" hidden = {ifBotDF}>BOT DF</th>\r\n        <th align=\"center\" hidden = {!ifBotDF}></th>\r\n        <th className=\"text-center\" hidden = {ifNotchOut}>NOTCH OUT</th>\r\n        <th align=\"center\" hidden = {!ifNotchOut}></th>\r\n        <th colSpan=\"2\" className=\"text-center\" >CUSTOMIZE ADD ON</th>\r\n        <th  className=\"text-center\" >MEMO</th>\r\n        <th colSpan=\"3\"className=\"text-center\">Price</th>\r\n\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\nexport default PrintHead;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nfunction PrintTable({ item, ItemNum }) {\r\n  function isEmpty(value) {\r\n    if(value === \"\")\r\n    {\r\n      return true;\r\n    }\r\n    else{\r\n      return false;\r\n    } // Modify this condition based on your definition of an empty value\r\n  }\r\n  const [ifFinLOrR, setIfFinLOrR] = useState(true);\r\n  const [ifDoorH, setIfDoorH] = useState(true);\r\n  const [ifPcTopDoor, setIfPcTopDoor] = useState(true);\r\n  const [ifPcDoor, setIfPcDoor] = useState(true);\r\n  const [ifBotDF, setIfBotDF] = useState(true);\r\n  const [ifNotchOut, setIfNotchOut] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setIfFinLOrR(!isEmpty(item.finLOrR));\r\n    setIfDoorH(!isEmpty(item.doorH));\r\n    setIfPcTopDoor(!isEmpty(item.pcTopDoor));\r\n    setIfPcDoor(!isEmpty(item.pcDoor));\r\n    setIfBotDF(!isEmpty(item.botDF));\r\n    setIfNotchOut(!isEmpty(item.notchOut));\r\n  }, [item]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <tr className=\"ReadOnly\">\r\n        <td>{ItemNum + 1}</td>\r\n        <td >{item.cabinetSize}</td>\r\n        <td colSpan={4}>{item.doorColor}</td>\r\n        <td align=\"center\">{item.qty}</td>\r\n        <td align=\"center\">{item.width}</td>\r\n        <td align=\"center\">{item.height}</td>\r\n        <td align=\"center\">{item.depth}</td>\r\n        <td align=\"center\">{item.hinge}</td>\r\n        <td align=\"center\" hidden = {!ifFinLOrR}>{item.finLOrR}</td>\r\n        <td align=\"center\" hidden = {ifFinLOrR}></td>\r\n        <td align=\"center\" hidden = {!ifDoorH}>{item.doorH}</td>\r\n        <td align=\"center\" hidden = {ifDoorH}></td>\r\n        <td align=\"center\" hidden = {!ifPcTopDoor}>{item.pcTopDoor}</td>\r\n        <td align=\"center\" hidden = {ifPcTopDoor}></td>\r\n        <td align=\"center\" hidden = {!ifPcDoor}>{item.pcDoor}</td>\r\n        <td align=\"center\" hidden = {ifPcDoor}></td>\r\n        <td align=\"center\" hidden = {!ifBotDF}>{item.botDF}</td>\r\n        <td align=\"center\" hidden = {ifBotDF}></td>\r\n        <td align=\"center\" hidden = {!ifNotchOut}>{item.notchOut}</td>\r\n        <td align=\"center\" hidden = {ifNotchOut}></td>\r\n        <td align=\"center\" colSpan={2}>{item.customizeAddOn}</td>\r\n        <td align=\"center\" >{item.memo}</td>\r\n        <td align=\"center\" >{item.price}</td>\r\n\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PrintTable;\r\n","import React from \"react\";\r\n\r\nfunction TableFooter(props) {\r\n  const items = props.items;\r\n  const accessories = props.acc;\r\n  let testTotal = 0;\r\n  let totalQty = 0;\r\n  for (let row in items) {\r\n    testTotal += Number(items[row].price);\r\n    totalQty += Number(items[row].qty);\r\n  }\r\n  for (let row in accessories) {\r\n    testTotal += Number(accessories[row].accPrice);\r\n    totalQty += Number(accessories[row].accQty);\r\n  }\r\n  \r\n   testTotal = +(Math.round(testTotal + \"e+2\") + \"e-2\");\r\n\r\n  return (\r\n    <tfoot>\r\n      <tr>\r\n      <td colSpan=\"6\" align=\"right\">\r\n        </td>\r\n        <td align=\"center\">total items {totalQty}</td>\r\n        <td colSpan=\"15\" align=\"right\">\r\n        ${testTotal}\r\n        </td>\r\n      </tr>\r\n    </tfoot>\r\n  );\r\n}\r\n\r\nexport default TableFooter;\r\n","import React, { Fragment} from \"react\";\r\n\r\nfunction PrintAcc({ item, ItemNum}) {\r\n  return (\r\n    <Fragment>\r\n      <tr className=\"ReadOnly\">\r\n        <td>Accessory{ItemNum + 1}</td>\r\n        <td >{item.acc}</td>\r\n        <td colSpan={4}>{item.accColor}</td>\r\n        <td align=\"center\">{item.accQty}</td>\r\n        <td align=\"center\">{item.accWidth}</td>\r\n        <td align=\"center\">{item.accHeinght}</td>\r\n        <td align=\"center\">{item.accDepth}</td>\r\n        <td align=\"center\" colSpan={10}></td>\r\n        <td align=\"center\" >{item.accPrice}</td>\r\n\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PrintAcc;\r\n","import React,  {useState} from \"react\";\r\n\r\nfunction TableFooter(props) {\r\n  const items = props.items;\r\n  const [addNumberOfRow, setAddNumberOfRow] = useState(1);\r\n\r\n  let testTotal = 0;\r\n  let totalQty = 0;\r\n  for (let row in items) {\r\n    testTotal += Number(items[row].price);\r\n    totalQty += Number(items[row].qty);\r\n  }\r\n  \r\n  testTotal = +(Math.round(testTotal + \"e+2\") + \"e-2\");\r\n   \r\n  function handleClick(n) {\r\n    props.onAdd(n);\r\n  }\r\n\r\n  function handleAddRowNumber(event) {\r\n    const needRow = event.target.value;\r\n    setAddNumberOfRow(needRow);\r\n  }\r\n\r\n  return (\r\n    <tfoot>\r\n      <tr>\r\n      <td colSpan=\"5\" align=\"right\">\r\n          total items\r\n        </td>\r\n        <td>{totalQty}</td>\r\n        <td colSpan=\"7\" align=\"right\">\r\n        ${testTotal}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td colSpan=\"3\">\r\n          <div className=\"input-group\">\r\n            <i\r\n              className=\"bi bi-plus-circle-fill btn btn-secondary\"\r\n              onClick={() => handleClick(addNumberOfRow)}\r\n            >\r\n              Add Cabinet\r\n            </i>\r\n            <input\r\n              type=\"number\"\r\n              name=\"NumOfRow\"\r\n              className=\"form-control\"\r\n              value={addNumberOfRow}\r\n              onChange={(event) => handleAddRowNumber(event)}\r\n              style={{ width: \"5em\" }}\r\n            />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tfoot>\r\n  );\r\n}\r\n\r\nexport default TableFooter;\r\n","import React from \"react\";\r\n\r\nfunction AccTableHead() {\r\n  return (\r\n    <thead className=\"table-success\">\r\n      <tr>\r\n        <th className=\"text-center\" style={{ width: \"100px\" }}>Accessory</th>\r\n        <th className=\"text-center\">Copy</th>\r\n        <th className=\"text-center\" style={{ width: \"80px\" }}>Item#</th>\r\n        <th className=\"text-center\" style={{ width: \"200px\" }}>ACC-NO</th>\r\n        <th className=\"text-center\" style={{ width: \"100px\" }}>COLOR</th>\r\n        <th className=\"text-center\" style={{ width: \"100px\" }}>Qty</th>\r\n        <th >Width(inch)</th>\r\n\r\n        <th colSpan=\"2\">Height(inch)</th>\r\n\r\n        <th colSpan=\"2\">Depth</th>\r\n\r\n\r\n        <th  colSpan=\"2\" className=\"text-center\">Price</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\nexport default AccTableHead;","import React, { useState , useEffect} from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nfunction AccTableBody({newItem, \r\n    Accitem,\r\n    accNum,\r\n    handleDeleteAcc,\r\n    handleCopyAcc,\r\n    handleEditedAcc,\r\n  }) {\r\n    const colorSelected = [\r\n      newItem.ADoorColor,\r\n      newItem.BDoorColor,\r\n      newItem.CDoorColor\r\n    ]\r\n    const [Acc, setAcc] = useState([]);\r\n  useEffect(() => {\r\n    Axios.get(`https://us-east-1.aws.data.mongodb-api.com/app/application-0-hxfdv/endpoint/accessory`)\r\n      .then((res) => {\r\n        const searchedCabinet = res.data;\r\n        setAcc(searchedCabinet);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n    \r\n  \r\n    return (\r\n      <tr>\r\n        <td>\r\n          <i className=\"bi bi-x-circle-fill btn\"\r\n            onClick={() => handleDeleteAcc(Accitem.id)}\r\n          ></i>\r\n        </td>\r\n        <td>\r\n          <i className=\"bi bi-files btn\"\r\n          onClick={() => handleCopyAcc(Accitem.id)}\r\n          ></i>\r\n        </td>\r\n        <td className=\"text-center\"> {accNum + 1}</td>\r\n        <td >\r\n          <input\r\n            type=\"text\"\r\n            list=\"acc\"\r\n            className=\"form-control\"\r\n            placeholder=\"Select Accessories\"\r\n            name=\"acc\"\r\n            style={{ width: \"14em\" }}\r\n            value={Accitem.acc}\r\n            onChange={(event) => handleEditedAcc(event, Accitem.id, Accitem, newItem)} \r\n            />\r\n            <datalist id=\"acc\">\r\n              {Acc.map((item, key) => (\r\n                <option key={key} value={item.ACC} />\r\n              ))}\r\n            </datalist>\r\n        </td>\r\n        <td>\r\n          <input\r\n            type=\"text\"\r\n            list=\"accColor\"\r\n            className=\"form-control\"\r\n            placeholder=\"Select ACC Color\"\r\n            name=\"accColor\"\r\n            style={{ width: \"12em\" }}\r\n            value={Accitem.accColor} \r\n            onChange={(event) => handleEditedAcc(event, Accitem.id, Accitem, newItem)}\r\n                       />\r\n          <datalist id=\"accColor\">\r\n            {colorSelected.map((item, key) => (\r\n              <option key={key} value={item} />\r\n            ))}\r\n          </datalist>\r\n        </td>\r\n        <td style={{ textAlign: \"center\" }} >\r\n          <input\r\n            type=\"number\"\r\n            name=\"accQty\"\r\n            className=\"form-control\"\r\n            style={{ width: \"5em\", margin: \"0 auto\"  }}\r\n            value={Accitem.accQty}\r\n            min=\"0\"\r\n            onChange={(event) => handleEditedAcc(event, Accitem.id, Accitem, newItem)}\r\n          />\r\n        </td>\r\n          <td className=\"text-center\" style={{ textAlign: \"center\" }} colSpan={2}>\r\n            <input\r\n              type=\"number\"\r\n              name=\"accWidth\"\r\n              className=\"form-control\"\r\n              style={{ width: \"5em\"  }}\r\n              value={Accitem.accWidth}\r\n              min=\"0\"\r\n              readOnly\r\n              disabled\r\n            />\r\n          </td>\r\n        <td className=\"text-center\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"accHeight\"\r\n            className=\"form-control\"\r\n            style={{ width: \"5em\"  }}\r\n            value={Accitem.accHeight}\r\n            readOnly\r\n            disabled />\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"accDepth\"\r\n            className=\"form-control\"\r\n            style={{ width: \"5em\"}}\r\n            value={Accitem.accDepth}\r\n            readOnly\r\n            disabled />\r\n        </td>\r\n        <td colSpan=\"10\">\r\n          <input\r\n            name=\"accPrice\"\r\n            className=\"form-control bg-light rounded-pill\"\r\n            type=\"number\"\r\n            value={Accitem.accPrice}\r\n            style={{ width: \"8em\", margin: \"0 auto\"  }}\r\n            readOnly\r\n            disabled />\r\n        </td>\r\n        </tr>        \r\n        );\r\n  \r\n  }\r\n\r\nexport default AccTableBody;","import React,  {useState} from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nfunction AccTableFooter(props) {\r\n  const acc = props.acc;\r\n  const items = props.items;\r\n  const newItem = props.newItem;\r\n  const [addNumberOfRow, setAddNumberOfRow] = useState(1);\r\n\r\n  let testTotal = 0;\r\n  let totalQty = 0;\r\n  for (let row in acc) {\r\n    testTotal += Number(acc[row].accPrice);\r\n    totalQty += Number(acc[row].accQty);\r\n  }\r\n  \r\n   testTotal = +(Math.round(testTotal + \"e+2\") + \"e-2\");\r\n   \r\n  function handleClick(n) {\r\n    props.onAdd(n);\r\n  }\r\n\r\n  function handleAddRowNumber(event) {\r\n    const needRow = event.target.value;\r\n    setAddNumberOfRow(needRow);\r\n  }\r\n\r\n  let itemsWithNewData = [];\r\n\r\n  if (Array.isArray(items)) {\r\n    itemsWithNewData = itemsWithNewData.concat(items);\r\n  }\r\n  \r\n  if (Array.isArray(acc)) {\r\n    for(let i in acc){\r\n      if(acc[i].accQty !== 0)\r\n      itemsWithNewData = itemsWithNewData.concat(acc[i]);\r\n    }\r\n  }\r\n  \r\n  itemsWithNewData = itemsWithNewData.map((item) => ({\r\n    ...newItem,\r\n    ...item\r\n  }));\r\n\r\n  return (\r\n    <tfoot>\r\n      <tr>\r\n      <td colSpan=\"12\" align=\"center\">\r\n          total items {totalQty}\r\n        </td>\r\n        <td colSpan=\"1\" align=\"center\">\r\n        ${testTotal}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td colSpan=\"3\">\r\n          <div className=\"input-group\">\r\n            <i\r\n              className=\"bi bi-plus-circle-fill btn btn-secondary\"\r\n              onClick={() => handleClick(addNumberOfRow)}\r\n            >\r\n              Add Accessory\r\n            </i>\r\n            <input\r\n              type=\"number\"\r\n              name=\"NumOfRow\"\r\n              className=\"form-control\"\r\n              value={addNumberOfRow}\r\n              onChange={(event) => handleAddRowNumber(event)}\r\n              style={{ width: \"5em\" }}\r\n            />\r\n          </div>\r\n        </td>\r\n        <td colSpan=\"4\">\r\n          <i\r\n            className=\"bi bi-file-earmark-pdf-fill btn btn-primary\"\r\n            onClick={props.printPDF}\r\n            style={{ color: \"white\", borderStyle: \"solid\" }}\r\n          >\r\n            PDF\r\n          </i>\r\n          <CSVLink data={itemsWithNewData} filename={\"my-file.csv\"} target=\"_blank\"   \r\n>\r\n            <i\r\n              className=\"bi bi-filetype-csv btn btn-primary\"\r\n              style={{ color: \"white\", borderStyle: \"solid\" }}\r\n            >\r\n              CSV\r\n            </i>\r\n          </CSVLink>\r\n        </td>\r\n      </tr>\r\n    </tfoot>\r\n  );\r\n}\r\n\r\nexport default AccTableFooter;","import React, { Fragment, useState, useRef, useEffect} from \"react\";\r\nimport TableHead from \"./TableHead\";\r\nimport TableBody from \"./TableBody\";\r\nimport { nanoid } from \"nanoid\";\r\nimport PrintHead from \"./PrintHead\"\r\nimport PrintTable from \"./PrintTable\"\r\nimport PrintFooter from \"./PrintFooter\"\r\nimport PrintAcc from \"./PrintAcc\"\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport TableFooter from \"./TableFooter\";\r\nimport * as XLSX from \"xlsx/xlsx.js\";\r\nimport AccTableHead from \"./AccTableHead\";\r\nimport AccTableBody from \"./AccTableBody\";\r\nimport AccTableFooter from \"./AccTableFooter\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nfunction CreateArea({info}) {\r\n  const [cabinet, setCabinet] = useState([]);\r\n  const [cabinetDoor, setCabinetDoor] = useState([]);\r\n  const [Acc, setAcc] = useState([]);\r\n  const [customer, setCustomer] = useState([]);\r\n  const [addOn, setAddOn] = useState([]);\r\n  const [cabinetFinish, setCabnietFinish] = useState([]);\r\n  useEffect(() => {\r\n    Axios.get(`https://us-east-1.aws.data.mongodb-api.com/app/application-0-hxfdv/endpoint/cabinet`)\r\n      .then((res) => {\r\n        const searchedCabinet = res.data;\r\n        setCabinet(searchedCabinet);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    Axios.get(`https://us-east-1.aws.data.mongodb-api.com/app/application-0-hxfdv/endpoint/accessory`)\r\n          .then((res) => {\r\n            const searchedCabinet = res.data;\r\n            setAcc(searchedCabinet);\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n    Axios.get(`https://us-east-1.aws.data.mongodb-api.com/app/application-0-hxfdv/endpoint/cabinet_door`)\r\n      .then((res) => {\r\n        const searchedCabinet = res.data;\r\n        setCabinetDoor(searchedCabinet);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    Axios.get(`https://us-east-1.aws.data.mongodb-api.com/app/application-0-hxfdv/endpoint/get_cabinet_customer`)\r\n      .then((res) => {\r\n        const searchedCabinet = res.data;\r\n        setCustomer(searchedCabinet);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    Axios.get(`https://us-east-1.aws.data.mongodb-api.com/app/application-0-hxfdv/endpoint/get_cabinet_addon`)\r\n      .then((res) => {\r\n        const searchedCabinet = res.data;\r\n        setAddOn(searchedCabinet);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n      Axios.get(`https://us-east-1.aws.data.mongodb-api.com/app/application-0-hxfdv/endpoint/get_cabinet_finish`)\r\n      .then((res) => {\r\n        const searchedCabinet = res.data;\r\n        setCabnietFinish(searchedCabinet);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n  \r\n  const [select, setSelect] = useState({\r\n    company: \"\",\r\n    PO: \"\",\r\n    cabinetBox: \"\",\r\n    hingeType: \"\",\r\n    ADoorColor: \"\",\r\n    BDoorColor: \"\",\r\n    CDoorColor: \"\",\r\n    slide: \"\",\r\n    drawer: \"\",\r\n    cabinetLeg: \"None\",\r\n    discount: 100\r\n  });\r\n\r\n  const [items, setItems] = useState([\r\n    {\r\n        id:0,\r\n        cabinetSize: \"\",\r\n        doorType: \"\",\r\n        doorColor: \"\",\r\n        qty: 1,\r\n        width:0,\r\n        height: 0,\r\n        depth: 0,\r\n        hinge: \"\",\r\n        finLOrR:\"\",\r\n        doorH:\"\",\r\n        pcTopDoor:\"\",\r\n        pcDoor:\"\",\r\n        botDF:\"\",\r\n        notchOut:\"\",\r\n        customizeAddOn:\"\",\r\n        memo:\"\",\r\n        price: 0,\r\n        BO: 0,\r\n        DO: 0\r\n  }])\r\n\r\n  const [accessories, setAccessories] = useState([{\r\n    id:1,\r\n    acc:\"\",\r\n    accColor:\"\",\r\n    accCategory:\"\",\r\n    accWidth:0,\r\n    accHeight:0,\r\n    accDepth:0,\r\n    accType:\"\",\r\n    accQty:0,\r\n    accPrice: 0\r\n  }])\r\n  \r\n  const getCabinetById = (id) => {\r\n    return cabinet.find((cab) => cab.ID === id);\r\n  };\r\n\r\n\r\n  const getColor = (color) => {\r\n    return cabinetDoor.find(cab =>cab.color === color);\r\n  }\r\n  const getAddOnDoor = (custom) => {\r\n    return addOn.find(cab => cab.AddOnDoor === custom);\r\n  }\r\n  const getAddOnHardware = (custom) => {\r\n    return addOn.find(cab => cab.AddOnHardware === custom);\r\n  }\r\n  const getAcc = (id) => {\r\n    return Acc.find(cab => cab.ACC === id);\r\n  }\r\n\r\n  const componentPDF = useRef();\r\n  const generatePDF = useReactToPrint({\r\n    content: () => componentPDF.current,\r\n    documentTile: \"UserData\",\r\n  });  \r\n\r\n  function updateRow(event) {\r\n      const fieldName = event.target.getAttribute(\"name\");\r\n      const fieldValue = event.target.value;\r\n          // Update the price for each item based on the new select values\r\n      const updatedItems = items.map((item) => {\r\n      const updatedItem = { ...item };\r\n      const newSelect = { ...select };\r\n  \r\n      setSelect((prevState) => ({\r\n        ...prevState,\r\n        [fieldName]: fieldValue,\r\n      }));\r\n\r\n      // Update the relevant select value\r\n      newSelect[fieldName] = fieldValue;\r\n  \r\n      // Calculate the new price for the item\r\n      updatedItem.price = calculation(updatedItem, newSelect);\r\n  \r\n      return updatedItem;\r\n    });\r\n  \r\n    setItems(updatedItems);\r\n  }\r\n\r\n  \r\n  function calculation(obj, select){\r\n    const finLorR = obj.finLOrR;\r\n    const notchOut = obj.notchOut;\r\n    let price = 0;\r\n    let finalPrice = 0;\r\n    const DO = parseFloat(obj.DO);\r\n    const BO = parseFloat(obj.BO);\r\n    const qty = parseFloat(obj.qty);\r\n    const cabInfo = getCabinetById(obj.cabinetSize);\r\n    const newDoorColor = getColor(obj.doorColor);\r\n    let customizeAddOn = getAddOnDoor(obj.customizeAddOn);\r\n    if (!customizeAddOn) {\r\n      customizeAddOn = getAddOnHardware(obj.customizeAddOn);\r\n    }\r\n    const doorType = newDoorColor ? newDoorColor.category : \"\";        \r\n    let doorCount = 0;\r\n    let hingeNum = 0;\r\n    let hingeType = select.hingeType;\r\n    let drawer = select.drawer;\r\n    let slide = select.slide;\r\n    let slideNum = 0;\r\n    let discount =parseFloat(select.discount) ;\r\n\r\n    if (cabInfo) {\r\n      doorCount = cabInfo.DOOR_COUNT;\r\n      hingeNum = cabInfo.HINGE_COUNT;\r\n      slideNum = cabInfo.SLIDE_COUNT;\r\n      if(obj.width > cabInfo.W){\r\n        finalPrice = NaN\r\n      }\r\n    }\r\n    \r\n    price =  DO + BO;\r\n    price = +(Math.round(price + \"e+2\") + \"e-2\");\r\n      if(discount !== 0){\r\n        price = price * (discount / 100).toFixed(2);\r\n      }\r\n\r\n    if (doorType !== \"\" && cabInfo ){\r\n      const newFinish = cabinetFinish[doorType];\r\n      if (finLorR === \"R\" || finLorR === \"L\"){\r\n        price += cabInfo[newFinish];\r\n      }\r\n      else if(finLorR === \"LR\"){\r\n        price += cabInfo[newFinish] * 2;\r\n      }\r\n    }\r\n    if(notchOut === \"GOLA\"){\r\n      price += 25;\r\n    }\r\n    else if(notchOut === \"MITER DOOR\"){\r\n      price += 25;\r\n      price += doorCount * 15;\r\n    }\r\n\r\n    if(hingeType === \"BLUM\"){\r\n      price += hingeNum * 4;\r\n    }\r\n\r\n    if(slide === \"BLUM UM SLIDE\" ||slide === \"SALICE UM SLIDE\"){\r\n      price += slideNum * 35;\r\n    }\r\n\r\n    if(drawer === \"METAL DRAWER SLIM GREY\"){\r\n      price += slideNum *17;\r\n    }\r\n    else if (drawer === \"PLYWOOD DRAWER\"){\r\n      price += slideNum *5;\r\n    }\r\n    else if(drawer === \"DOVETAIL DRAWER\"){\r\n      price += slideNum *32;\r\n    }\r\n\r\n    if(customizeAddOn){\r\n      if (customizeAddOn.AddOnDoor){\r\n        price += customizeAddOn.Price * doorCount;\r\n      }\r\n      else if(customizeAddOn.AddOnHardware){\r\n        price += customizeAddOn.Price;\r\n      }\r\n    }\r\n    \r\n    if(qty !==0){\r\n      finalPrice = price * qty;\r\n      finalPrice = +(Math.round(finalPrice + \"e+2\") + \"e-2\");\r\n    }\r\n\r\n    if(obj.width < 0 ){\r\n      finalPrice = NaN\r\n    }\r\n    if(obj.qty < 0 ){\r\n      finalPrice = NaN\r\n    }\r\n    return finalPrice;\r\n  }\r\n\r\n  function updateItem(event, itemId, item, select) {\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    let fieldValue = event.target.value.toUpperCase();\r\n    const newData = { ...item };\r\n    const newSelect = { ...select };\r\n  \r\n    const Newindex = cabinetDoor.findIndex((item) => item.color === fieldValue);\r\n    const Sindex = cabinet.findIndex((item) => item.ID === fieldValue);\r\n\r\n    if (fieldName === \"cabinetSize\") {\r\n      if (Sindex !== -1) {\r\n        newData[\"width\"] = cabinet[Sindex].W;\r\n        newData[\"height\"] = cabinet[Sindex].H;\r\n        newData[\"depth\"] = cabinet[Sindex].D;\r\n        if (newData[\"height\"] === 93) {\r\n          newData[\"pcTopDoor\"] = \"39\";\r\n        }\r\n        if (cabinet[Sindex].HARDWARE !== 0) {\r\n          newData[\"customizeAddOn\"] = cabinet[Sindex].HARDWARE;\r\n        }\r\n      }\r\n    } else if (fieldName === \"doorColor\") {\r\n      if (Newindex !== -1) {\r\n        newData[\"doorType\"] = cabinetDoor[Newindex].category;\r\n      }\r\n    }\r\n    newData[fieldName] = fieldValue;\r\n    const newCabinetInfo = getCabinetById(newData.cabinetSize);\r\n    const newDoorColor = getColor(newData.doorColor);\r\n    if (newCabinetInfo && newDoorColor) {\r\n      newData[\"DO\"] = newCabinetInfo[newDoorColor.category];\r\n      newData[\"BO\"] = newCabinetInfo[select.cabinetBox];\r\n    }\r\n    if (newCabinetInfo) {\r\n      newData[\"price\"] = calculation(newData, newSelect);\r\n    } else {\r\n      newData[\"price\"] = NaN;\r\n      newData[\"width\"] = NaN;\r\n      newData[\"height\"] = NaN;\r\n      newData[\"depth\"] = NaN;\r\n    }\r\n  \r\n    const editedItem = {\r\n      id: itemId,\r\n      cabinetSize: newData.cabinetSize,\r\n      doorType: newData.doorType,\r\n      doorColor: newData.doorColor,\r\n      qty: newData.qty,\r\n      width: newData.width,\r\n      height: newData.height,\r\n      depth: newData.depth,\r\n      hinge: newData.hinge,\r\n      finLOrR: newData.finLOrR,\r\n      doorH: newData.doorH,\r\n      pcTopDoor: newData.pcTopDoor,\r\n      pcDoor: newData.pcDoor,\r\n      botDF: newData.botDF,\r\n      notchOut: newData.notchOut,\r\n      customizeAddOn: newData.customizeAddOn,\r\n      memo: newData.memo,\r\n      price: newData.price,\r\n      BO: newData.BO,\r\n      DO: newData.DO,\r\n    };\r\n  \r\n    const newItems = [...items];\r\n    const index = items.findIndex((item) => item.id === itemId);\r\n    newItems[index] = editedItem;\r\n    setItems(newItems);\r\n  }\r\n\r\n  function copyRow(itemId) {\r\n    const newItems = [...items];\r\n    const index = items.findIndex((item) => item.id === itemId);\r\n    const copyItem = newItems[index];\r\n    const tempItem = {\r\n      id: 0,\r\n      cabinetSize: copyItem.cabinetSize,\r\n        doorType: copyItem.doorType,\r\n        doorColor: copyItem.doorColor,\r\n        qty: copyItem.qty,\r\n        width: copyItem.width,\r\n        height: copyItem.height,\r\n        depth: copyItem.depth,\r\n        hinge: copyItem.hinge,\r\n        finLOrR:copyItem.finLOrR,\r\n        doorH:copyItem.doorH,\r\n        pcTopDoor:copyItem.pcTopDoor,\r\n        pcDoor:copyItem.pcDoor,\r\n        botDF:copyItem.botDF,\r\n        notchOut:copyItem.notchOut,\r\n        customizeAddOn:copyItem.customizeAddOn,\r\n        memo:copyItem.memo,\r\n        price: copyItem.price,\r\n        BO: copyItem.BO,\r\n        DO: copyItem.DO,\r\n    };\r\n    tempItem.id = nanoid();\r\n    newItems.splice(index, 0, tempItem);\r\n    setItems(newItems);\r\n\r\n  }\r\n\r\n  function deleteRow(itemId) {\r\n    const newItems = [...items];\r\n    const index = items.findIndex((item) => item.id === itemId);\r\n    newItems.splice(index, 1);\r\n    setItems(newItems);\r\n  }\r\n\r\n  function addRow(n) {\r\n    const newItems = [];\r\n    for (let i = 0; i < n; i++) {\r\n      const newItem = {\r\n        cabinetSize: \"\",\r\n        doorType: \"\",\r\n        doorColor: \"\",\r\n        qty: 1,\r\n        width: 0,\r\n        height: 0,\r\n        depth: 0,\r\n        hinge: \"\",\r\n        finLOrR:\"\",\r\n        doorH:\"\",\r\n        pcTopDoor:\"\",\r\n        pcDoor:\"\",\r\n        botDF:\"\",\r\n        notchOut:\"\",\r\n        customizeAddOn:\"\",\r\n        memo:\"\",\r\n        price: 0,\r\n        BO: 0,\r\n        DO: 0,\r\n        id: nanoid(),\r\n      };\r\n      newItems.push(newItem);\r\n    }\r\n    const newItemsAdd = [...items, ...newItems];\r\n    setItems(newItemsAdd);\r\n  }\r\n\r\n  function uploadCal(item, discount){\r\n    const cabinetSize = item.cabinetSize;\r\n    const doorColor = item.doorColor;\r\n    const cabinetBox = item.cabinetBox;\r\n    const qty = item.qty;\r\n    // Handle the response from the MongoDB function \r\n    const newCabinetInfo = getCabinetById(cabinetSize);\r\n    const newDoorColor = getColor(doorColor);\r\n    const doorType = newDoorColor.category;\r\n    const width = newCabinetInfo.W;\r\n    const height = newCabinetInfo.H;\r\n    const depth = newCabinetInfo.D;\r\n    const DO = newCabinetInfo[newDoorColor.category];\r\n    const BO = newCabinetInfo[cabinetBox] ;\r\n    const doorCount = newCabinetInfo.DOOR_COUNT;\r\n    const hingeNum = newCabinetInfo.HINGE_COUNT;\r\n    const hingeType = item.hingeType;\r\n    const drawer = item.drawer;\r\n    const slide = item.slide;\r\n    const slideNum = newCabinetInfo.SLIDE_COUNT;\r\n    const notchOut = item.notchOut;\r\n    const finLOrR = item.finLOrR;\r\n    const newFinish = cabinetFinish[doorType];\r\n    let finalPrice = 0;\r\n    let price = parseFloat(DO + BO);\r\n    let newDiscount =parseFloat(discount) ;\r\n    if(newDiscount !== 0 && newDiscount){\r\n      price = price * (newDiscount / 100).toFixed(2);\r\n    }\r\n    let customizeAddOn = item.customizeAddOn;\r\n\r\n        if(customizeAddOn !== undefined){\r\n          customizeAddOn = getAddOnDoor(customizeAddOn);\r\n          if (!customizeAddOn) {\r\n          customizeAddOn = getAddOnHardware(item.customizeAddOn);\r\n          }\r\n        }\r\n        \r\n        if(customizeAddOn){\r\n          if (customizeAddOn.AddOnDoor){\r\n            price += customizeAddOn.Price * doorCount;\r\n          }\r\n          else if(customizeAddOn.AddOnHardware){\r\n            price += customizeAddOn.Price;\r\n          }\r\n        }\r\n\r\n      if (finLOrR === \"R\" || finLOrR === \"L\"){\r\n        price += newCabinetInfo[newFinish];\r\n      }\r\n      else if(finLOrR === \"LR\"){\r\n        price += newCabinetInfo[newFinish] * 2;\r\n      }\r\n      if(notchOut === \"GOLA\"){\r\n        price += 25;\r\n      }\r\n      else if(notchOut === \"MITER DOOR\"){\r\n        price += 25;\r\n        price += doorCount * 15;\r\n      }\r\n  \r\n      if(hingeType === \"BLUM\"){\r\n        price += hingeNum * 4;\r\n      }\r\n  \r\n      if(slide === \"BLUM UM SLIDE\" ||slide === \"SALICE UM SLIDE\"){\r\n        price += slideNum * 35;\r\n      }\r\n  \r\n      if(drawer === \"METAL DRAWER SLIM GREY\"){\r\n        price += slideNum *17;\r\n      }\r\n      else if (drawer === \"PLYWOOD DRAWER\"){\r\n        price += slideNum *5;\r\n      }\r\n      else if(drawer === \"DOVETAIL DRAWER\"){\r\n        price += slideNum *32;\r\n      }\r\n\r\n      if(qty !==0){\r\n        finalPrice = price * qty;\r\n        finalPrice = +(Math.round(finalPrice + \"e+2\") + \"e-2\");\r\n      }\r\n    return [width, height, depth, finalPrice, doorType,DO,BO];\r\n  }\r\n\r\nconst handleFileUpload = (e) => {\r\n  const file = e.target.files[0];\r\n\r\n  // Check if the file is an Excel file. If not, return alert.\r\n  if (\r\n    !file ||\r\n    (!file.name.endsWith(\".xlsx\") && !file.name.endsWith(\".csv\")) ||\r\n    !file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n  ) {\r\n    alert(\"Please select an Excel file (XLSX)\");\r\n    return;\r\n  }\r\n\r\n  // Read the file name\r\n  const reader = new FileReader();\r\n  reader.readAsBinaryString(file);\r\n\r\n  // Load the file data\r\n  reader.onload = (e) => {\r\n    // Get the file\r\n    const items = e.target.result;\r\n    // Read the file\r\n    const workbook = XLSX.read(items, { type: \"binary\" });\r\n    // Read the first sheet only and get the sheet name\r\n    const sheetName = workbook.SheetNames[0];\r\n    const sheet = workbook.Sheets[sheetName];\r\n    // Create the new variable to store the data from the sheet\r\n    let parsedData = XLSX.utils.sheet_to_json(sheet);  \r\n    if (parsedData.length >=1 ){\r\n      if(parsedData[0].cabinetSize === \"\"){\r\n        return;\r\n      }\r\n    }\r\n    else{\r\n      return;\r\n    }\r\n\r\n    let newItem = {\r\n      cabinetSize: parsedData[0].cabinetSize,\r\n      company: parsedData[0].company || \"\",\r\n      PO: parsedData[0].PO || \"\",\r\n      cabinetBox: parsedData[0].cabinetBox || \"\",\r\n      hingeType: parsedData[0].hingeType || \"\",\r\n      ADoorColor: parsedData[0].ADoorColor || \"\",\r\n      BDoorColor: parsedData[0].BDoorColor || \"\",\r\n      CDoorColor: parsedData[0].CDoorColor || \"\",\r\n      slide: parsedData[0].slide || \"\",\r\n      drawer: parsedData[0].drawer || \"\",\r\n      cabinetLeg: parsedData[0].cabinetLeg || \"None\",\r\n      discount: parsedData[0].discount || 100,\r\n    };\r\n  setSelect(newItem);  \r\n\r\n    // Create a new array to store the objects in the data\r\n    let newArray = [];\r\n    let newAcc = [];\r\n\r\n    for (let row in parsedData) {\r\n      if(!parsedData[row].acc ){\r\n        let newItem = {\r\n          cabinetSize: parsedData[row].cabinetSize || \"\",\r\n          doorType: parsedData[row].doorType || \"\",\r\n          doorColor: parsedData[row].doorColor || \"\",\r\n          qty: parsedData[row].qty || NaN,\r\n          width: parsedData[row].width || NaN,\r\n          height: parsedData[row].height || NaN,\r\n          depth: parsedData[row].depth || NaN,\r\n          hinge: parsedData[row].hinge || \"\",\r\n          finLOrR: parsedData[row].finLOrR || \"\",\r\n          doorH: parsedData[row].doorH || \"\",\r\n          pcTopDoor: parsedData[row].pcTopDoor || \"\",\r\n          pcDoor: parsedData[row].pcDoor || \"\",\r\n          botDF: parsedData[row].botDF || \"\",\r\n          notchOut: parsedData[row].notchOut || \"\",\r\n          customizeAddOn: parsedData[row].customizeAddOn || \"\",\r\n          memo: parsedData[row].memo || \"\",\r\n          price: NaN,\r\n          BO: NaN,\r\n          DO: NaN,\r\n          id: nanoid()\r\n        };\r\n  \r\n        const priceArr = uploadCal(parsedData[row], parsedData[0].discount);\r\n        const widthField = \"width\";\r\n        const heightField = \"height\";\r\n        const depthField = \"depth\";\r\n        const priceField = \"price\";\r\n        const idField = \"id\";\r\n        const doorTypeField = \"doorType\";\r\n        const DOField = \"DO\";\r\n        const BOField = \"BO\";\r\n  \r\n        // Re-Calculate the price and subtotal of the object, Re-set the id for the object\r\n        newItem[widthField] = priceArr[0];\r\n        newItem[heightField] = priceArr[1];\r\n        newItem[depthField] = priceArr[2];\r\n        newItem[priceField] = priceArr[3];\r\n        newItem[doorTypeField] = priceArr[4];\r\n        newItem[DOField] = priceArr[5];\r\n        newItem[BOField]= priceArr[6];\r\n        newItem[idField] = Number(row) + 1;\r\n  \r\n        // According to the Panel ID, Re-set the empty part of Panel Finish\r\n  \r\n        // Push the object into the array\r\n        newArray.push(newItem);\r\n      }\r\n      else if(parsedData[row].acc){\r\n          // Create a new object to store data from the file\r\n          let newItem = {\r\n            acc:parsedData[row].acc,\r\n            accColor:parsedData[row].accColor,\r\n            accCategory:parsedData[row].accCategory,\r\n            accWidth:parsedData[row].accWidth,\r\n            accHeight:parsedData[row].accHeight,\r\n            accDepth:parsedData[row].accDepth,\r\n            accType:parsedData[row].accType,\r\n            accQty:parsedData[row].accQty,\r\n            accPrice:calAcc(parsedData[row]),\r\n            id: nanoid()\r\n            }\r\n        newAcc.push(newItem);\r\n\r\n      }\r\n      // Create a new object to store data from the file\r\n      \r\n    }\r\n    // Set the new Array into the items\r\n    setItems(newArray);\r\n    setAccessories(newAcc);\r\n    }    \r\n  };\r\n\r\n  const formatPercentage = (value) => {\r\n    const numericValue = parseFloat(value);\r\n    if (!isNaN(numericValue)) {\r\n      const percentageValue = (numericValue * 100).toFixed(2);\r\n      return `${percentageValue}`;\r\n    }\r\n    return value;\r\n  };\r\n\r\n  function updateTwo(event, item) {\r\n    const newData = { ...item };\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    let fieldValue = event.target.value;\r\n  \r\n    if (fieldName === \"company\") {\r\n      const fieldName1 = \"company\";\r\n      const fieldName2 = \"discount\";\r\n      newData[fieldName1] = fieldValue.toUpperCase();\r\n  \r\n      const Sindex = customer.findIndex((item) => item.Company.toUpperCase() === fieldValue.toUpperCase());\r\n      if (Sindex !== -1) {\r\n        newData[fieldName2] = formatPercentage(customer[Sindex].MULTIPIER);\r\n      }\r\n      else{\r\n        newData[fieldName2] = 100;\r\n      }\r\n\r\n    }\r\n  \r\n    if (fieldName === \"discount\") {\r\n      const fieldName2 = \"discount\";\r\n      fieldValue = fieldValue.replace(\"%\", \"\") + \"%\";\r\n      newData[fieldName2] = fieldValue;\r\n    }\r\n\r\n    setSelect(newData);\r\n  \r\n    // Update the price for each item based on the new select values\r\n    const updatedItems = items.map((item1) => {\r\n      const updatedItem = { ...item1 };\r\n      const newSelect = { ...newData }; // Use the updated select values from newData\r\n  \r\n      // Calculate the new price for the item\r\n      updatedItem.price = calculation(updatedItem, newSelect);\r\n  \r\n      return updatedItem;\r\n    });\r\n  \r\n    setItems(updatedItems);\r\n  }\r\n\r\n  function updateAcc(event, itemId, item, select) {\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    let fieldValue = event.target.value.toUpperCase();\r\n    const newData = { ...item };\r\n    const Sindex = Acc.findIndex((item) => item.ACC === fieldValue);\r\n    const newItems = [...accessories];\r\n    const index = accessories.findIndex((item) => item.id === itemId);\r\n    let discount = parseFloat(select.discount);\r\n  \r\n    if (fieldName === \"acc\") {\r\n      newData[\"acc\"] = fieldValue;\r\n      if (Sindex !== -1) {\r\n        newData[\"accWidth\"] = Acc[Sindex].W;\r\n        newData[\"accHeight\"] = Acc[Sindex].H;\r\n        newData[\"accDepth\"] = Acc[Sindex].D;\r\n      }\r\n    } else if (fieldName === \"accColor\") {\r\n      newData[\"accColor\"] = fieldValue;\r\n    } else if (fieldName === \"accQty\") {\r\n      newData[\"accQty\"] = fieldValue;\r\n    }\r\n    const newAccInfo = getAcc(newData.acc);\r\n    const newAccColor = getColor(newData.accColor);\r\n    if (newAccInfo && newAccColor) {\r\n      newData[\"accCategory\"] = newAccColor.category;\r\n      newData[\"accPrice\"] = newAccInfo[newAccColor.category];\r\n      newData[\"accPrice\"] *= (discount / 100).toFixed(2) * newData[\"accQty\"];\r\n      newData[\"accPrice\"] = +(Math.round(newData[\"accPrice\"] + \"e+2\") + \"e-2\");\r\n    }\r\n  \r\n    const editedItem = {\r\n      id: itemId,\r\n      acc: newData.acc,\r\n      accColor: newData.accColor,\r\n      accCategory: newData.accCategory,\r\n      accWidth: newData.accWidth,\r\n      accHeight: newData.accHeight,\r\n      accDepth: newData.accDepth,\r\n      accType: newData.accType,\r\n      accQty: newData.accQty,\r\n      accPrice: newData.accPrice\r\n    };\r\n    newItems[index] = editedItem;\r\n    setAccessories(newItems);\r\n  }\r\n\r\n  function addAcc(n) {\r\n    const newItems = [];\r\n    for (let i = 0; i < n; i++) {\r\n      const newItem = {\r\n        id: nanoid(),\r\n        acc:\"\",\r\n        accColor:\"\",\r\n        accCategory:\"\",\r\n        accWidth:0,\r\n        accHeight:0,\r\n        accDepth:0,\r\n        accType:\"\",\r\n        accQty:0,\r\n        accPrice: 0\r\n      };\r\n      newItems.push(newItem);\r\n    }\r\n    const newItemsAdd = [...accessories, ...newItems];\r\n    setAccessories(newItemsAdd);\r\n  }\r\n\r\n  function copyAcc(itemId) {\r\n    const newItems = [...accessories];\r\n    const index = accessories.findIndex((item) => item.id === itemId);    const copyItem = newItems[index];\r\n    const tempItem = {\r\n      id: 0,\r\n      acc:copyItem.acc,\r\n      accColor:copyItem.accColor,\r\n      accCategory:copyItem.accCategory,\r\n      accWidth:copyItem.width,\r\n      accHeight:copyItem.height,\r\n      accDepth:copyItem.depth,\r\n      accType:copyItem.accType,\r\n      accQty:copyItem.accQty,\r\n      accPrice:copyItem.accPrice\r\n    };\r\n    tempItem.id = nanoid();\r\n    newItems.splice(index, 0, tempItem);\r\n    setAccessories(newItems);\r\n  }\r\n\r\n  function deleteAcc(itemId) {\r\n    const newItems = [...accessories];\r\n    const index = accessories.findIndex((item) => item.id === itemId);\r\n    newItems.splice(index, 1);\r\n    setAccessories(newItems);\r\n  }\r\n\r\n  function calAcc(item){\r\n    const accQty = item.accQty;\r\n    let price = 0;\r\n    const discount =parseFloat(item.discount) ;\r\n    const newAccInfo = getAcc(item.acc);\r\n    const newAccColor = getColor(item.accColor);\r\n    if(newAccInfo && newAccColor){\r\n      price = newAccInfo[newAccColor.category];\r\n      price *= (discount / 100).toFixed(2) * accQty;\r\n      price = +(Math.round(price + \"e+2\") + \"e-2\");\r\n    }\r\n    return price;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <table\r\n        className=\"table table-hover table-sm table-responsive-sm\"\r\n        id=\"my-table\"\r\n      >\r\n        <TableHead\r\n          item={select}\r\n          handleEditAllInOne={updateRow}\r\n          handleUpdateTwo = {updateTwo}\r\n        />\r\n        <tbody>\r\n          {items.map((rowItem, index) => {\r\n            return (\r\n              <TableBody\r\n                key={index}\r\n                itemNum ={index}\r\n                handleDeleteClick={deleteRow}\r\n                handleCopyClick={copyRow}\r\n                handleEdited = {updateItem}\r\n                item = {rowItem}\r\n                newItem={select}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n        <TableFooter items = {items} newItem = {select} onAdd={addRow} printPDF={generatePDF}/>\r\n      </table>\r\n      <table>\r\n      <AccTableHead\r\n        item={select}\r\n        />\r\n        <tbody>\r\n          {accessories.map((rowItem, index) => {\r\n            return (\r\n              <AccTableBody\r\n                key={index}\r\n                accNum ={index}\r\n                handleDeleteAcc={deleteAcc}\r\n                handleCopyAcc={copyAcc}\r\n                handleEditedAcc = {updateAcc}\r\n                Accitem = {rowItem}\r\n                newItem={select}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n        <AccTableFooter items={items} acc = {accessories} newItem = {select} onAdd={addAcc} printPDF={generatePDF}/>\r\n      </table>\r\n      <div hidden>\r\n      <table\r\n        id=\"PrintTable\"\r\n        className=\"table table-hover table-sm table-responsive-sm\"\r\n        ref={componentPDF}\r\n      >\r\n      <PrintHead \r\n        item = {items}\r\n        select = {select}\r\n        info = {info}\r\n      />\r\n        <tbody>\r\n        {items.map((rowItem, index) => {\r\n            return (\r\n              <PrintTable\r\n              key ={index}\r\n              ItemNum={index}\r\n              item={rowItem}\r\n              />\r\n              );\r\n          })}\r\n          {accessories.map((rowItem, index) => {\r\n            return (\r\n              <PrintAcc\r\n                key={index}\r\n                ItemNum ={index}\r\n                item = {rowItem}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n        <PrintFooter items={items} acc={accessories}/>\r\n        </table>\r\n      </div>\r\n      <input\r\n        type=\"file\"\r\n        accept=\".xlsx, .xls, .csv\"\r\n        className=\"form-control bg-light rounded-pill\"\r\n        onChange={handleFileUpload}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default CreateArea;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction Topbar() {\r\n  return (\r\n    <header>\r\n    <nav\r\n    className=\"navbar2 navbar-expand-lg bg-body-tertiary rounded\"\r\n      aria-label=\"Thirteenth navbar example\"\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarsExample11\"\r\n          aria-controls=\"navbarsExample11\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse d-lg-flex\" id=\"navbarsExample11\">\r\n          <a className=\"navbar-brand col-lg-3 me-0\" href=\"nav\">\r\n            \r\n            <img\r\n        src=\"https://adroitmanufacturing.allmoxy.com/data/header/Adroit_logo_3d-01-01.png\"\r\n        alt=\"adroit-manufacturing-logo\"\r\n        width={120}\r\n        height={50}\r\n      />\r\n          </a>\r\n          <ul className=\"navbar-nav col-lg-6 justify-content-lg-center\">\r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"dropdown-toggle\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <i className=\"bi bi-star-fill\"></i>\r\n              </a>\r\n              <ul className=\"dropdown-menu\">\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"dropdown\">\r\n                    Action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"dropdown\">\r\n                    Another action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"dropdown\">\r\n                    Something else here\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"dropdown-toggle\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <i className=\"bi bi-cart-fill\"></i>\r\n              </a>\r\n              <ul className=\"dropdown-menu\">\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"dropdown\">\r\n                    Action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"dropdown\">\r\n                    Another action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"dropdown\">\r\n                    Something else here\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"dropdown-toggle\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <i className=\"bi bi-pie-chart-fill\"></i>\r\n              </a>\r\n              <ul className=\"dropdown-menu\">\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"dropdown\">\r\n                    Action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"dropdown\">\r\n                    Another action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"dropdown\">\r\n                    Something else here\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"dropdown-toggle\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <i className=\"bi bi-gear-fill\"></i>\r\n              </a>\r\n              <ul className=\"dropdown-menu\">\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"dropdown\">\r\n                    Action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"dropdown\">\r\n                    Another action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"dropdown\">\r\n                    Something else here\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"dropdown-toggle\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <i className=\"bi bi-bell-fill\"></i>\r\n              </a>\r\n              <ul className=\"dropdown-menu\">\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"dropdown\">\r\n                    Action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"dropdown\">\r\n                    Another action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"dropdown\">\r\n                    Something else here\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n          <div className=\"d-lg-flex col-lg-3 justify-content-lg-end\">\r\n            <i className=\"bi bi-person-circle btn\" style={{\"fontsize\": \"28px\"}}></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    </header>\r\n  );\r\n}\r\nexport default Topbar;\r\n","import React from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nfunction RightSideBar({ setInfo }) {\r\n  const handleInfoChange = (e) => {\r\n    setInfo((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n  const table = [{\r\n    cabinetSize: \"\",\r\n    doorColor: \"\",\r\n    qty: \"\",\r\n    cabinetBox:\"\"\r\n  }]\r\n\r\n  return (\r\n    <nav className=\"navbar\" id=\"sidenav\">\r\n      <ul className=\"navbar-nav\">\r\n      <li className=\"logo\">\r\n        <button className=\"nav-link\">\r\n          <svg\r\n            aria-hidden=\"true\"\r\n            focusable=\"false\"\r\n            data-prefix=\"fad\"\r\n            data-icon=\"angle-double-right\"\r\n            role=\"img\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 448 512\"\r\n            className=\"svg-inline--fa fa-angle-double-right fa-w-14 fa-5x\"\r\n          >\r\n            <g className=\"fa-group\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M224 273L88.37 409a23.78 23.78 0 0 1-33.8 0L32 386.36a23.94 23.94 0 0 1 0-33.89l96.13-96.37L32 159.73a23.94 23.94 0 0 1 0-33.89l22.44-22.79a23.78 23.78 0 0 1 33.8 0L223.88 239a23.94 23.94 0 0 1 .1 34z\"\r\n                className=\"fa-secondary\"\r\n              ></path>\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M415.89 273L280.34 409a23.77 23.77 0 0 1-33.79 0L224 386.26a23.94 23.94 0 0 1 0-33.89L320.11 256l-96-96.47a23.94 23.94 0 0 1 0-33.89l22.52-22.59a23.77 23.77 0 0 1 33.79 0L416 239a24 24 0 0 1-.11 34z\"\r\n                className=\"fa-primary\"\r\n              ></path>\r\n            </g>\r\n          </svg>\r\n        </button>\r\n      </li>\r\n\r\n      <li className=\"logo\">\r\n        <span className=\"link-text logo-text nav-link\">Order Information</span>\r\n          <div>\r\n            {/* <input\r\n              className=\"form-control logo-text\"\r\n              placeholder=\"Order Name\"\r\n              name=\"name\"\r\n              onChange={handleInfoChange}\r\n            />\r\n            <textarea\r\n              className=\"form-control logo-text\"\r\n              placeholder=\"Description\"\r\n              name=\"description\"\r\n              onChange={handleInfoChange}\r\n            ></textarea> */}\r\n            <input\r\n              className=\"form-control logo-text\"\r\n              type=\"date\"\r\n              placeholder=\"date\"\r\n              name=\"date\"\r\n              onChange={handleInfoChange}\r\n            />\r\n          </div>\r\n      </li>\r\n      <li className=\"logo\">\r\n        <span className=\"link-text logo-text nav-link\" >Billing</span>\r\n          <div>\r\n            <textarea\r\n              className=\"form-control link-text logo-text\"\r\n              placeholder=\"Billing Instructions\"\r\n              rows={6}\r\n              name=\"billing\"\r\n              onChange={handleInfoChange}\r\n            ></textarea>\r\n          </div>\r\n      </li>\r\n      <li className=\"logo\">\r\n        <span className=\"link-text logo-text nav-link\">Memo</span>\r\n          <div>\r\n            <textarea\r\n              className=\"form-control link-text logo-text\"\r\n              placeholder=\"Memo\"\r\n              rows={6}\r\n              name=\"memo\"\r\n              onChange={handleInfoChange}\r\n            ></textarea>\r\n          </div>\r\n          </li>\r\n          <li>\r\n          <CSVLink data={table} filename={\"my-file.csv\"} target=\"_blank\">\r\n            <i\r\n              className=\"bi bi-filetype-csv btn btn-primary link-text logo-text\"\r\n              style={{ color: \"white\", borderStyle: \"solid\" }}\r\n            >\r\n              Form Download\r\n            </i>\r\n          </CSVLink>\r\n          </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default RightSideBar;","import React, { useState } from \"react\";\r\nimport CreateArea from \"./CreateArea\";\r\nimport Topbar from \"./Topbar\";\r\nimport RightSideBar from \"./RightSideBar\";\r\n\r\nfunction App() {\r\n  const [info, setInfo] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    date: \"\",\r\n    billing: \"\",\r\n    memo: \"\"\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Topbar/>\r\n      <div className=\"main-container\" id=\"main\">\r\n      <RightSideBar setInfo={setInfo} />\r\n        <div id=\"main\">\r\n          <CreateArea info={info} />\r\n        </div >\r\n      </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './components/App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n"],"sourceRoot":""}